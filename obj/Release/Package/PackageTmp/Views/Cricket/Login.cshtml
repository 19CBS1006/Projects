@model Vispl.Training.Crickinfo.VO.Login_VO
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body, html {
            height: 100%;
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            background-image: url('@Url.Content("~/Content/Images/d.jpg")');
            background-size: cover;
            background-position: center;
            background-repeat: repeat;
        }

        .login-page {
            width: 400px;
            padding: 40px;
            display: flow;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            margin-bottom: 5%;
        }

        *, ::after, ::before {
            box-sizing: content-box !important;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            font-weight: bold;
            color:aliceblue;
            font-size:25px;
        }

        

        .form-group button {
            width: 40%;
            padding: 12px;
            background-color: #007bff;
            color: #fff;
            border: none;
            margin-left: 3%;
            border-radius: 25px;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .form-group button:hover {
                background-color: #0056b3;
            }
</style>


<body>
    <div class="login-page">
        <br />
        @using (Html.BeginForm("Login", "Cricket", FormMethod.Post))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Username,new Dictionary<string,object> { {"type","text" } })
                @Html.EJS().TextBoxFor(model => model.Username).Placeholder("Enter Username").HtmlAttributes(new Dictionary<string, object> { { "title", "Type your username" }, { "type", "text" } }).Render()
                @Html.ValidationMessageFor(model => model.Username, "", new { style = "color: white;" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, new Dictionary<string, object> { { "type", "password" } })
                @Html.EJS().TextBoxFor(model => model.Password).Placeholder("Enter Password").HtmlAttributes(new Dictionary<string, object> { { "title", "Type your Password" }, { "type", "password" } }).Render()
                @Html.ValidationMessageFor(model => model.Password, "", new { style = "color: white;" })
            </div>
            <div class="form-group">
                <button type="submit">Login</button>
            </div>
        }
    </div>
</body>

